 Since 11/27/18:
    Done:
        - Made a new branch (set_eq) to work on developing a new set equivalence function for use with poly/mono
        - Proved necessary theorems about reflexivity, symmetry, transitivity, and compatibility with various functions
          to enable rewriting as used before
        - Updated all existing lemmas in poly.v to use the new operator, adding new lemmas as needed
    Problems:
        - My computer still won't behave, so I just coded without using the _CoqProject file all day.
        - Have run into another issue with the set_eq operator, namely that since it uses incl in its definition,
          when comparing sets-of-sets (ie polynomials), it still uses the normal = (and not mine) to compare the
          inner layer of sets (ie the monomials). Not sure how to fix this one without redefining incl and In and 
          reproving all of the useful standard library lemmas myself!
        - poly_unif.v and sve.v still use the old equal operator in places, and make fails at the moment
    To-Do:
        - Fix my computer (or just give up and keep working like this)
        - Fix the issue with set_eq and polynomials
        - Finish proving the remaining admitted lemmas needed to prove 10.4.10
        


 Since 11/20/18:
	Done:
		- Reorganized project structure with Dylan. More information in his changelog.
		- Worked on replacing lemmas involving polynomials to use my listset as opposed to dylan's ordered lists
		- Worked on lemmas about properties of polynomial math in poly.v (effectively working to prove the 10 axioms hold)
		- Worked on other admitted lemmas used for Dylan's proof of 10.4.10 part 1.
	Problems:
		- Huge technical issue on my end. I'm unable to work with the project structure in it's current state, and
		  after three hours of troubleshooting, the only way I have been able to develop at all is by copy-pasting 
		  all previous required exports into the top of the same file. This needs to be fixed ASAP but I've hit a
		  road block at every turn.
		- Have run into some issues when proving things involving polynomials and monomials. Specifically, I need
		  the equals operator to treat sets that are ordered differently the same (ie, NoDup (a :: x) should mean
		  that a :: x = x ++ [a] in set terms). Maybe the listset representation is the wrong way to go?
	To-Do:
		- Fix my computer so that I'm actually able to work on the project!
		- Further examine representation of polynomials, and find a way to resolve the order problem.
		- Begin working on part 2 of theorem 10.4.10 (sigma' built with the SVE rules is a reprod unifier)
		- Prove more of the underlying admitted lemmas to make sure we aren't moving forward on an incorrect foundation
