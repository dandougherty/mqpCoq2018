During Christmas break :

Things I worked on:

- changed the format of our lowenheim builder to math the format of lemma 10.4.5
- proved lemma 10.4.5 and then that our lowenheim builder unifies , having added 3 admitted helper lemmas
- added property for rewrites within apply_subst, having added 1 admitted helper lemma
- proved that our lowenheim builder gives a substitution that is reproductive, having added 2 admitted helper lemmas
- proved that any reproductive unifier is also a most general unifier
- proved that our lowenheim builder gives a most general unifier
- fixed our apply_subst function to account for replacements that refer to each other (so that they do not get mixed up)
and modifierd (reproved) all the lemmas that were already proved and involved apply_subst


Plans:

- reorganize the files by splitting our terms.v files
- clean up our existing files by removing unused coq code and developement
- add more writing
- start filling in helper admitted leamms




----------------------------------------------------------------------------------------------------------------


For Thursday 12/13 :

Things I worked on:

- added introductory subsections to the intro chapter of the report
- worked on 10.4.5 , but after failing to keep the current format and solve the existing problem
by adding the extra l, decided to try a new apporach by changing how the lemma is formed, but that still in the works 
(adding a list of vars and changing the proposition equivalence to a list of replacements) - more like professor's version
. Still admitted though and working on it.
-finally merged lowenheim_dev with the rest of the team.

Plans/ problems
- finish 10.4.5 !!!
- finish the other two proofs based on 10.4.5 (one of them is done but if 10.4.5 's format changes, it needs to change too)


------------------------------------------------------------------------------------------------------

For Monday 12 / 9 :

Things I worked on:
- added a correction on Lowenheim main formula. Added testing for find_ground_unifier function.
- imporved a lot the proof. Multiple attempts to prove 10.4.5, proved that lowenheim unifies based on admitted 10.4.5
- added some documentation

Problems /plans:

- no universal way to check the correctness of the output of Lownheim's function, have to prove the equivalence with axioms manually, after the sunstitution
- stuck on an induction step for the proof of 10.4.5
- 1 proof left : lowenheim is a reproductive unifier.


---------------------------------------


For Thursday 12 / 6:

Things I worked on:
- Completed and cleaned Lowenheim's algorithms, by improving existing main function, creating more helper functions
 and introducing new data type subst_option
- Added small sentences / paragraphs as part of the report withing the source files. All functions/definitions are documented/commented
and all subsections are created.
- Created without proving 2 Lemmas from the book, necessary for proving Lowenheim's formula

Problems / Plans:
- verify correctness of Lemmas and start on the proof
- more on the report commenting && pdf generation




-------------------------------------------------------------


For Monday 12 / 3 :

Things I worked on :
- completed Lowenheims main formula / function
- worked with Joseph to slightly tweak definitions of more general unifiers and most general unifiers, added reproductive unifier definition.
- added new versions of term evaluation / simplification functions that helped to define the main Lowenheim formula

Problems / plans :
- still a bit unclear path about the proof. Perhaps the use of reproductive unifier would help? further focus / consultation on the proof now that most/all of Lowenheim formulation is complete
- some issues with rewrites with the "==" equivalence symbol, cannot rewrite within context of other function, to use ub the proofs if simple examples.


--------------------------------------------------------------


for Thursday 11/29:

things I am working on and will be working on this week:
- developing the feauture that lowenheim finds the ground solutions on its own.
Having some trouble finding a way to produce all the possible combinations (subsets )
of a list of vars, perhaps using the permutation coq library?

- refactoring the code to eqv from equal. After replacing the definitions with eqv and using prof's Dougherty
helper definitions / additions, there are issues with some of the proofs. Complex examples do not work as before, they require special 
changes , as well as some of the proofs. The usual error that comes up is that "eqv" is not "Proper" inside the error message. Joseph said he fixed the above by adding two
more axioms and he will talk with the professor about them; awaiting further counseling on this.


------------------------------------------------------------------

for Tuesday 11/27:

things I worked on last week:
- the evaluation function for simplifying terms made of 0's and 1's, 
e.g. the multipliation and the addition function
- adding feautres to Lowenheim's base formula, the check_correct input function
and the ability of the function to take multiple ground solutions and produce multiple unifiers

Problems and things to work on:
- github problem, I am kind of stuck on a branch I pulled and I have tried several ways to undo it, but it's hard
- add more example with lowenheim's new formula
- potential feauture, lowenheim finds its ground solutions by itself
- look more into the proof, the definition of mgu and "more general unfier"



